generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
  schemas  = ["Users"]
}

model Modules {
  ModuleId           Int                  @id(map: "PK__Modules__2B7477A7ADB73036") @default(autoincrement())
  Name               String               @db.NVarChar(50)
  Path               String               @db.NVarChar(50)
  Icon               String               @db.NVarChar(50)
  Location           Int?
  UpdatedAt          DateTime?
  CreatedAt          DateTime             @default(now())
  ModuleElements     ModuleElements[]
  RoleModuleElements RoleModuleElements[]

  @@schema("Users")
}

model Roles {
  RoleId             Int                  @id(map: "PK__Roles__8AFACE1A82EC5318") @default(autoincrement())
  Name               String               @db.NVarChar(50)
  UpdatedAt          DateTime?
  CreatedAt          DateTime             @default(now())
  IsEnabled          Boolean
  RoleModuleElements RoleModuleElements[]
  Users              Users[]

  @@schema("Users")
}

model Users {
  UserId    Int       @id(map: "PK__Users__1788CC4C006B460C") @default(autoincrement())
  UserName  String    @db.NVarChar(50)
  Password  String    @db.NVarChar(100)
  RoleId    Int
  IsEnabled Boolean
  UpdatedAt DateTime?
  CreatedAt DateTime  @default(now())
  Roles     Roles     @relation(fields: [RoleId], references: [RoleId], onUpdate: NoAction, map: "FK_Users_Roles")

  @@schema("Users")
}

model ModuleElements {
  ModuleElementId    Int                  @id(map: "PK__ModuleEl__207254F01955FEEC") @default(autoincrement())
  Name               String               @db.NVarChar(50)
  Path               String               @db.NVarChar(50)
  Icon               String               @db.NVarChar(50)
  Description        String               @db.NVarChar(Max)
  ModuleId           Int?
  Location           Int?
  UpdatedAt          DateTime?
  CreatedAt          DateTime             @default(now())
  Modules            Modules?             @relation(fields: [ModuleId], references: [ModuleId], onDelete: NoAction, onUpdate: NoAction, map: "FK_ModuleElements_Modules")
  RoleModuleElements RoleModuleElements[]

  @@schema("Users")
}

model RoleModuleElements {
  RoleModuleElementId Int             @id(map: "PK__RoleModu__9D8939BFE9BFFD0A") @default(autoincrement())
  ModuleElementId     Int?
  RoleId              Int
  ModuleId            Int?
  IsShortcut          Boolean?
  UpdatedAt           DateTime?
  CreatedAt           DateTime        @default(now())
  ModuleElements      ModuleElements? @relation(fields: [ModuleElementId], references: [ModuleElementId], onDelete: NoAction, onUpdate: NoAction, map: "FK_RoleModuleElements_ModuleElements")
  Modules             Modules?        @relation(fields: [ModuleId], references: [ModuleId], onDelete: NoAction, onUpdate: NoAction, map: "FK_RoleModuleElements_Modules")
  Roles               Roles           @relation(fields: [RoleId], references: [RoleId], onUpdate: NoAction, map: "FK_RoleModuleElements_Roles")

  @@schema("Users")
}
